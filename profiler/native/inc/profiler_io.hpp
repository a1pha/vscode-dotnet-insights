////////////////////////////////////////////////////////////////////////////////
// Module: profiler_io.hpp
//
////////////////////////////////////////////////////////////////////////////////

#ifndef __PROFILER_IO_HPP__
#define __PROFILER_IO_HPP__

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#include <cassert>
#include <vector>

#include "http_request.hpp"

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

namespace ev31 {

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

class profiler_io
{
    // Ctor / Dtor
    public:
        profiler_io();
        ~profiler_io();

    // Member Methods
    public:
        void communicate(const std::size_t, const std::wstring&, double);

    // Private member methods
    private:
        const std::vector<wchar_t> _get_json_payload(const std::size_t, const std::wstring&, double);
};

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

} // end of namespace (ev31)

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

#endif // __PROFILER_IO_HPP__

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////