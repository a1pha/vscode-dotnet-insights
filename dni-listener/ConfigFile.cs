////////////////////////////////////////////////////////////////////////////////
// Module: ConfigFile.cs
//
// Notes:
//  Configuration file for DniInsightsListener.
////////////////////////////////////////////////////////////////////////////////

namespace DniListener {

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

using System.Diagnostics;

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

struct ConfigFile
{
    /// <Summary> CpuCollectionPercentage </Summary>
    /// <Notes>
    /// CPU percentage to start collecting a trace. For example, start a trace
    /// when the process' CPU hits 80%. By default this is over the total core
    /// percentage.
    /// </Notes>
    float CpuCollectionPercentage;
    float MemoryCollectionPercentage;
    float CpuRateCollectionPercentage;

    public ConfigFile()
    {
        this.CpuCollectionPercentage = -1.0f;
        this.MemoryCollectionPercentage = -1.0f;
        this.CpuRateCollectionPercentage = -1.0f;
    }

    void ParseConfigFile(string path, out bool success)
    {
        success = false;

        this.CpuCollectionPercentage = -1.0f;
        this.MemoryCollectionPercentage = -1.0f;
        this.CpuRateCollectionPercentage = -1.0f;

        Debug.Assert(this.CpuCollectionPercentage == -1.0f);
        Debug.Assert(this.MemoryCollectionPercentage == -1.0f);
        Debug.Assert(this.CpuRateCollectionPercentage == -1.0f);
    }
    
}

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////

} // DniListener

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
